# Создать вручную список, содержащий цены на товары (10–20 товаров), например:
# [57.8, 46.51, 97, ...]

prices = [57.8, 46.51, 97, 78.06, 35.02, 74.8, 65.98, 5.45, 7.62, 77.77]

# A.
# Вывести на экран эти цены через запятую в одну строку, цена должна отображаться в виде
# <r> руб <kk> коп (например «5 руб 04 коп»). Подумать, как из цены получить рубли и копейки,
# как добавить нули, если, например, получилось 7 копеек или 0 копеек (должно быть 07 коп
# или 00 коп).

for price in prices:
    if price == prices[-1]:
        declination = '\n'
    else:
        declination = ', '
    print(f'«{(price // 1)} руб {round(price % 1 * 100):02d} коп»', end=declination)

# «57 руб 80 коп», «46 руб 51 коп», «97 руб 00 коп», «78 руб 06 коп», «35 руб 02 коп», «74 руб 80 коп», «65 руб 98 коп»,
# «5 руб 45 коп», «7 руб 62 коп», «77 руб 77 коп»

# B.
# Вывести цены, отсортированные по возрастанию, новый список не создавать (доказать, что
# объект списка после сортировки остался тот же).

print(id(prices), '\n', prices)

# 139638089383616
# [57.8, 46.51, 97, 78.06, 35.02, 74.8, 65.98, 5.45, 7.62, 77.77]

prices.sort()
print(id(prices), '\n', prices)

# 139638089383616
# [5.45, 7.62, 35.02, 46.51, 57.8, 65.98, 74.8, 77.77, 78.06, 97]

# C. Создать новый список, содержащий те же цены, но отсортированные по убыванию.

sort_prices = prices.copy()
sort_prices.reverse()
print(id(sort_prices), '\n', sort_prices)

# 139638088552512
# [97, 78.06, 77.77, 74.8, 65.98, 57.8, 46.51, 35.02, 7.62, 5.45]

# D. Вывести цены пяти самых дорогих товаров. Сможете ли вывести цены этих товаров по
# возрастанию, написав минимум кода?

print(prices[-5:])

# [65.98, 74.8, 77.77, 78.06, 97]
